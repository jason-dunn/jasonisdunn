@page "/fetchdata"
@layout Shared.Layouts.MainLayout
@using jasonisdunn.Data
@inject WeatherForecastService WeatherForecastService
@inject MainLayoutState AppState
@inject NavigationManager NavigationManager
@inject PageHistoryState PageHistoryState
@inject Blazored.LocalStorage.ILocalStorageService localStore
@inject Blazored.SessionStorage.ISessionStorageService localSession



@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <br />
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private WeatherForecast[]? forecasts;
    [Parameter]
    public bool _FetchData { get; set; }
    private bool boolFetchData;

    protected override async Task OnInitializedAsync()
    {     

        boolFetchData = await localSession.GetItemAsync<bool>("FetchData");
        
        if ( !boolFetchData & !AppState.ppFetchData )
            {
                forecasts = await WeatherForecastService.GetForecastAsync(DateTime.Now, true );
                AppState.SetFetchDataState(true); 
                await localSession.SetItemAsync("FetchData", true);
            }
            else
            {
                forecasts = await WeatherForecastService.GetForecastAsync(DateTime.Now, false);
                await localSession.SetItemAsync("FetchData", true);      
            }
             StateHasChanged();
        PageHistoryState.AddPageToHistory("fetchdata");
		base.OnInitialized();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

        }
        else
        {

        }
    }
}
